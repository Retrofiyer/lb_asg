name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Check Target Branch and Set Environment
        id: set-env
        run: |
          if [[ "${{ github.event.workflow_run.head_branch }}" == "QA" ]]; then
            echo "env=QA" >> $GITHUB_ENV
            echo "host=${{ secrets.EC2_HOSTSQA }}" >> $GITHUB_ENV
            echo "key=${{ secrets.EC2_KEYQA }}" >> $GITHUB_ENV
            echo "image_tag=qa" >> $GITHUB_ENV
          elif [[ "${{ github.event.workflow_run.head_branch }}" == "main" ]]; then
            echo "env=PROD" >> $GITHUB_ENV
            echo "host=${{ secrets.EC2_HOSTPROD }}" >> $GITHUB_ENV
            echo "key=${{ secrets.EC2_KEY }}" >> $GITHUB_ENV
            echo "image_tag=prod" >> $GITHUB_ENV
          else
            echo "No valid branch detected for deployment."
            exit 1
        shell: bash

      - name: Deploy Docker Image to Target Environment
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.host }}
          username: ubuntu
          key: ${{ env.key }}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              sudo systemctl restart docker
            fi
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/lb_asg:${{ env.image_tag }}
            sudo docker stop $(docker ps -q) || true
            sudo docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/lb_asg:${{ env.image_tag }}