on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up deployment hosts
        id: setup_hosts
        run: |
          echo "::set-output name=prod_hosts::${{secrets.EC2_HOSTPROD}}"
          echo "::set-output name=qa_hosts::${{secrets.EC2_HOSTSQA}}"

      - name: Deploy to Production Instances
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{secrets.EC2_HOSTPROD}}
          username: ubuntu
          key: ${{secrets.EC2_KEY}}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              sudo systemctl restart docker
            fi
            
            if ! sudo systemctl is-active --quiet docker; then
              sudo systemctl start docker
            fi

            sudo docker pull ${{secrets.DOCKER_USERNAME}}/lb_asg:latest
            sudo docker stop $(docker ps -q) || true
            sudo docker run -d -p 80:80 ${{secrets.DOCKER_USERNAME}}/lb_asg:latest

      - name: Deploy to QA Instances
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{secrets.EC2_HOSTSQA}}
          username: ubuntu
          key: ${{secrets.EC2_KEYQA}}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              sudo systemctl restart docker
            fi
            
            if ! sudo systemctl is-active --quiet docker; then
              sudo systemctl start docker
            fi

            sudo docker pull ${{secrets.DOCKER_USERNAME}}/lb_asg:latest
            sudo docker stop $(docker ps -q) || true
            sudo docker run -d -p 80:80 ${{secrets.DOCKER_USERNAME}}/lb_asg:latest