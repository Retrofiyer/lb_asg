name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - "QA"
      - "main"

jobs:
  ci_cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build and Tag the Docker Image
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "QA" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/lb_asg:qa .
          elif [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/lb_asg:prod .
          else
            echo "Invalid branch for building Docker image."
            exit 1
          fi

      - name: Push the Docker Image
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "QA" ]]; then
            docker push ${{ secrets.DOCKER_USERNAME }}/lb_asg:qa
          elif [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            docker push ${{ secrets.DOCKER_USERNAME }}/lb_asg:prod
          fi

      - name: Set Target Environment
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "QA" ]]; then
            echo "env=QA" >> $GITHUB_ENV
            echo "host=${{ secrets.EC2_HOSTSQA }}" >> $GITHUB_ENV
            echo "key_b64=$(echo '${{ secrets.EC2_KEYQA }}' | base64 | tr -d '\n')" >> $GITHUB_ENV
            echo "image_tag=qa" >> $GITHUB_ENV
          elif [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            echo "env=PROD" >> $GITHUB_ENV
            echo "host=${{ secrets.EC2_HOSTPROD }}" >> $GITHUB_ENV
            echo "key_b64=$(echo '${{ secrets.EC2_KEY }}' | base64 | tr -d '\n')" >> $GITHUB_ENV
            echo "image_tag=prod" >> $GITHUB_ENV
          else
            echo "No valid branch detected for deployment."
            exit 1
          fi

      - name: Write Private Key to File
        run: |
          echo "${{ env.key_b64 }}" | base64 -d > /tmp/private_key.pem
          chmod 600 /tmp/private_key.pem

      - name: SSH into EC2 and pull the latest Docker image
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.host }}
          username: ubuntu
          key_path: /tmp/private_key.pem
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              sudo systemctl restart docker
            else
              echo "Docker install"
            fi
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/lb_asg:${{ env.image_tag }}
            sudo docker stop $(docker ps -q) || true
            sudo docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/lb_asg:${{ env.image_tag }}