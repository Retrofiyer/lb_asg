name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - "QA"
      - "main"

jobs:
  ci_cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build and Tag the Docker Image
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "QA" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/lb_asg:qa .
          elif [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/lb_asg:prod .
          else
            echo "Invalid branch for building Docker image."
            exit 1
          fi

      - name: Push the Docker Image
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "QA" ]]; then
            docker push ${{ secrets.DOCKER_USERNAME }}/lb_asg:qa
          elif [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            docker push ${{ secrets.DOCKER_USERNAME }}/lb_asg:prod
          fi

      - name: Set Target Environment
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "QA" ]]; then
            echo "env=QA" >> $GITHUB_ENV
            printf "host=%s\n" "${{ secrets.EC2_HOSTSQA }}" >> $GITHUB_ENV
            printf "key=%s\n" "${{ secrets.EC2_KEYQA }}" >> $GITHUB_ENV
            echo "image_tag=qa" >> $GITHUB_ENV
          elif [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            echo "env=PROD" >> $GITHUB_ENV
            printf "host=%s\n" "${{ secrets.EC2_HOSTPROD }}" >> $GITHUB_ENV
            printf "key=%s\n" "${{ secrets.EC2_KEY }}" >> $GITHUB_ENV
            echo "image_tag=prod" >> $GITHUB_ENV
          else
            echo "No valid branch detected for deployment."
            exit 1
          fi

      - name: Debug Environment Variables
        run: |
          echo "Environment: $env"
          echo "Host: $host"
          echo "Key Length: ${#key}" # Muestra la longitud del valor de la clave
          echo "Image Tag: $image_tag"


      - name: SSH into EC2 and pull the latest Docker image
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{env.host}}
          username: ubuntu
          key: ${{env.key}}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              sudo systemctl restart docker
            else
              echo "Docker install"
            fi
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/lb_asg:${{ env.image_tag }}
            sudo docker stop $(docker ps -q) || true
            sudo docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/lb_asg:${{ env.image_tag }}